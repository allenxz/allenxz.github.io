{"title":"面试相关","date":"2019-11-20T06:51:41.182Z","thumbnail":"https://s2.ax1x.com/2019/11/20/MWOIOO.md.jpg","link":"2019/11/20/The-interview-related","updated":"2019-11-21T12:03:01.993Z","content":"<h2 id=\"数组扁平化（降维）\">数组扁平化（降维）<a href=\"2019/11/20/The-interview-related#数组扁平化（降维）\"></a></h2><ul>\n<li><p>Array.prototype.flat()</p>\n<ul>\n<li>例子</li>\n</ul>\n<figure class=\"highlight js\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,[<span class=\"string\">'a'</span>,<span class=\"string\">'b'</span>,<span class=\"string\">'c'</span>],<span class=\"number\">3</span>,<span class=\"number\">4</span>]</span><br><span class=\"line\">arr.flat()</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr) <span class=\"comment\">// [1, 2, \"a\", \"b\", \"c\", 3, 4]</span></span><br></pre></td></tr></table></div></figure>\n\n<ul>\n<li>用法：<code>var newArray = arr.flat([depth]);</code>，depth为指定要提取嵌套数组的结构深度，默认值为 1。当嵌套层级未知的时候，取<strong>Infinity</strong> 。</li>\n<li>注意：该方法虽然浏览器支持，但是没纳入ECMA标准；此外嵌套数组中如果有对象，没办法扁平化，得自己写flat方法去实现，核心在递归。</li>\n</ul>\n</li>\n<li><p>普通实现</p>\n<figure class=\"highlight js\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> datas = [</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    id: <span class=\"string\">'第一章'</span>,</span><br><span class=\"line\">    children: [&#123; <span class=\"attr\">id</span>: <span class=\"string\">'第一节'</span> &#125;, &#123; <span class=\"attr\">id</span>: <span class=\"string\">'第二节'</span> &#125;, &#123; <span class=\"attr\">id</span>: <span class=\"string\">'第三节'</span> &#125;]</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &#123; <span class=\"attr\">id</span>: <span class=\"string\">'第二章'</span>, <span class=\"attr\">children</span>: [&#123; <span class=\"attr\">id</span>: <span class=\"string\">'第一节'</span> &#125;, &#123; <span class=\"attr\">id</span>: <span class=\"string\">'第二节'</span> &#125;] &#125;,</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    id: <span class=\"string\">'第三章'</span>,</span><br><span class=\"line\">    children: [&#123; <span class=\"attr\">id</span>: <span class=\"string\">'第一节'</span> &#125;, &#123; <span class=\"attr\">id</span>: <span class=\"string\">'第二节'</span> &#125;, &#123; <span class=\"attr\">id</span>: <span class=\"string\">'第三节'</span> &#125;]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">flat</span>(<span class=\"params\">items</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> flatArr = []</span><br><span class=\"line\">  items.forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">    flatArr.push(item)</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">Array</span>.isArray(item.children)) &#123;</span><br><span class=\"line\">      flatArr = flatArr.concat(flat(item.children))</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> flatArr</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>使用Array.prototype.reduce()</p>\n<figure class=\"highlight js\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">flat</span>(<span class=\"params\">items</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> items.reduce(<span class=\"function\">(<span class=\"params\">prev, cur</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> prev.concat(</span><br><span class=\"line\">      cur,</span><br><span class=\"line\">      <span class=\"built_in\">Array</span>.isArray(cur.children) ? flat(cur.children) : []</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;, [])</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n</li>\n</ul>\n<h2 id=\"数据去重\">数据去重<a href=\"2019/11/20/The-interview-related#数据去重\"></a></h2><ul>\n<li><p>Set</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log([...new <span class=\"built_in\">Set</span>(arr)])</span><br></pre></td></tr></table></div></figure>\n\n<p>但是用Set的话有一个缺点，没办法去重一些复杂的数据</p>\n<figure class=\"highlight js\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,[<span class=\"number\">6</span>,<span class=\"number\">3</span>],[<span class=\"number\">6</span>,<span class=\"number\">3</span>],<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log([...new <span class=\"built_in\">Set</span>(arr)]) <span class=\"comment\">// [ 1, 3, 4, 5, [ 6, 3 ], [ 6, 3 ], 2]</span></span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>Object</p>\n<figure class=\"highlight js\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;&#125;</span><br><span class=\"line\">arr.forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">  obj[item] = <span class=\"number\">1</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.keys(obj).map(<span class=\"function\"><span class=\"params\">o</span> =&gt;</span> <span class=\"built_in\">Number</span>(o)))</span><br></pre></td></tr></table></div></figure>\n\n<p>用Object的话可以处理复杂数据</p>\n<figure class=\"highlight js\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,[<span class=\"number\">6</span>,<span class=\"number\">3</span>],[<span class=\"number\">6</span>,<span class=\"number\">3</span>],<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">2</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> obj = &#123;&#125;</span><br><span class=\"line\">arr.forEach(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\">  obj[item] = <span class=\"number\">1</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.keys(obj)) <span class=\"comment\">// [ '1', '2', '3', '4', '5', '6,3' ]</span></span><br></pre></td></tr></table></div></figure>\n\n<p>但是从结果上也能看出，还是不能完美处理数据。因为JS在判断是否为j对象键时，会自动对传入的键执行<code>toString()</code>。且不说<code>&#39;6,3&#39;</code>这样的数据得另外处理，万一数据进一步复杂化，出现<code>[1,&#39;3&#39;,3,4,5,[6,3],[6,3],2,3,2]</code>这样的数据，就会出现错误。所以就有了最后一种方案。</p>\n</li>\n<li><p>最终方案</p>\n<figure class=\"highlight js\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unique</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> obj = &#123;&#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr.filter(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">     <span class=\"keyword\">let</span> newItem = item + <span class=\"built_in\">JSON</span>.stringify(item) <span class=\"comment\">// key code</span></span><br><span class=\"line\">     <span class=\"keyword\">return</span> obj.hasOwnProperty(newItem) ? <span class=\"literal\">false</span> : obj[newItem] = <span class=\"literal\">true</span></span><br><span class=\"line\">  &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n\n\n\n\n</li>\n</ul>\n<h2 id=\"幂等性\">幂等性<a href=\"2019/11/20/The-interview-related#幂等性\"></a></h2><ul>\n<li>定义：一次和多次请求某一个资源<strong>对于资源本身</strong>应该具有同样的结果（网络超时等问题除外）。也就是说，<strong>其任意多次执行对资源本身所产生的影响均与一次执行的影响相同</strong></li>\n</ul>\n","prev":{"title":"HTML相关","link":"2019/11/21/HTML"},"next":{"title":"for...in和for...of","link":"2019/11/20/My-manual-01"},"plink":"http://allenxz.github.io/2019/11/20/The-interview-related/","toc":[{"title":"数组扁平化（降维）","id":"数组扁平化（降维）","index":"1"},{"title":"数据去重","id":"数据去重","index":"2"},{"title":"幂等性","id":"幂等性","index":"3"}]}