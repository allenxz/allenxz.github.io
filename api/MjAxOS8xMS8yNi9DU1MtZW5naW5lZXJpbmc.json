{"title":"CSS —— 工程化","date":"2019-11-26T02:28:32.518Z","thumbnail":"https://s2.ax1x.com/2019/11/26/Mxo0Ej.md.jpg","link":"2019/11/26/CSS-engineering","tags":["CSS","面试"],"categories":["Programming"],"updated":"2019-12-24T02:23:06.153Z","content":"<ul>\n<li>组织</li>\n<li>优化</li>\n<li>构建</li>\n<li>维护</li>\n</ul>\n<h2 id=\"PostCSS\">PostCSS<a href=\"2019/11/26/CSS-engineering#PostCSS\"></a></h2><p>CSS -&gt; PostCSS解析转换 -&gt; CSS，在PostCSS中进行模块化、加前缀、兼容性等。</p>\n<ul>\n<li>PostCSS本身只有解析能力</li>\n<li>各种神奇的特性全靠插件</li>\n<li>常见插件<ul>\n<li>postcss-import 模块合并</li>\n<li>autoprefixier 自动添加前缀</li>\n<li>cssnano 压缩代码</li>\n<li>postcss-cssnext 使用css新特性</li>\n<li>precss 变量、mixin、循环，功能和预处理器类似</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"webpack\">webpack<a href=\"2019/11/26/CSS-engineering#webpack\"></a></h2><p>核心思想：</p>\n<ul>\n<li>JS是整个应用的核心入口</li>\n<li>一切资源均由JS管理依赖</li>\n<li>一切资源均由webpack打包</li>\n</ul>\n<p>使用webpack处理CSS</p>\n<ul>\n<li>css-loader将CSS变成JS</li>\n<li>style-loader将JS样式插入head</li>\n<li>ExtractTextPlugin将CSS从JS中提取出来</li>\n<li>css module解决CSS命名冲突的问题</li>\n<li>less-loader sass-loader 各种预处理器</li>\n<li>postcss-loader PostCSS处理</li>\n</ul>\n<h2 id=\"面试题\">面试题<a href=\"2019/11/26/CSS-engineering#面试题\"></a></h2><ol>\n<li><p>如何解决CSS模块化问题</p>\n<ul>\n<li>Less Sass等预处理器</li>\n<li>PostCSS插件（postcss-import/precss）</li>\n<li>webpack处理CSS（css-loader + style-loader）</li>\n</ul>\n</li>\n<li><p>PostCSS可以做什么</p>\n<p>取决于插件</p>\n</li>\n<li><p>CSS module是做什么的，如何使用</p>\n<ul>\n<li>解决类名冲突的问题</li>\n<li>使用PostCSS或者webpack等构建工具进行编译</li>\n<li>在HTML模板中使用编译过程产生的类名</li>\n</ul>\n</li>\n<li><p>为什么要用JS来引用、加载CSS</p>\n<ul>\n<li>JS作为入口，管理资源有天然优势</li>\n<li>将组件的结构、样式、行为封装在一起，增强内聚</li>\n<li>可以做更多的处理（webpack）</li>\n</ul>\n</li>\n</ol>\n","prev":{"title":"What is in ES6","link":"2019/11/27/what-is-in-es6"},"next":{"title":"CSS —— 预处理器","link":"2019/11/25/CSS-preprocessor"},"plink":"http://allenxz.github.io/2019/11/26/CSS-engineering/","toc":[{"title":"PostCSS","id":"PostCSS","index":"1"},{"title":"webpack","id":"webpack","index":"2"},{"title":"面试题","id":"面试题","index":"3"}]}