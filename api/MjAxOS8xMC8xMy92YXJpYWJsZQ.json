{"title":"JavaScript —— 变量","date":"2019-10-13T03:59:44.315Z","thumbnail":"https://s2.ax1x.com/2019/10/13/uxdm2F.md.jpg","link":"2019/10/13/variable","updated":"2019-11-13T07:43:10.764Z","content":"<p>变量是一个语言中最基础的部分。而且在JS中，变量是弱类型的，导致在使用方面会和其他语言，和我们思维的习惯有些出入。</p>\n<ul>\n<li><p>变量通过typeof能得到哪些结果</p>\n<ul>\n<li>undefined</li>\n<li>string</li>\n<li>number</li>\n<li>boolean</li>\n<li>object</li>\n<li>function</li>\n<li>symbol</li>\n</ul>\n<p>PS： typeof null = object</p>\n</li>\n</ul>\n<ul>\n<li><p>什么时候使用<code>==</code>，什么时候使用<code>===</code></p>\n<p>除了以下情况，其余时候判等都应该用<code>===</code></p>\n<figure class=\"highlight plain\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if(obj.a==null)&#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>JS中的内置函数</p>\n<p>其实就是一些数据封装类对象</p>\n<ul>\n<li>Object</li>\n<li>Array</li>\n<li>Boolean</li>\n<li>Number</li>\n<li>String</li>\n<li>Function</li>\n<li>Date</li>\n<li>RegExp</li>\n<li>Error</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>JS的变量分类依据</p>\n<p>JS是根据储存方式来划分变量类型</p>\n</li>\n</ul>\n<ul>\n<li><p>手写深拷贝</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> *深拷贝</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;Object&#125; obj 需要拷贝的对象</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deepClone</span>(<span class=\"params\">obj = &#123;&#125;</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> obj !== <span class=\"string\">'object'</span> || obj == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> res</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (obj <span class=\"keyword\">instanceof</span> <span class=\"built_in\">Array</span>) &#123;</span><br><span class=\"line\">    res = []</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    res = &#123;&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> key <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 保证key不是原型上的数据</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (obj.hasOwnProperty(key)) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// 递归调用，拷贝深层的对象或数组</span></span><br><span class=\"line\">      res[key] = deepClone(obj[key])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">return</span> res</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n</li>\n<li><p>值类型和引用类型</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> obj1=&#123;<span class=\"attr\">x</span>:<span class=\"number\">100</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> obj2=obj1</span><br><span class=\"line\"><span class=\"keyword\">let</span> x=obj.x</span><br><span class=\"line\">obj2.x=<span class=\"number\">101</span></span><br><span class=\"line\">x=<span class=\"number\">102</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>(obj1) <span class=\"comment\">//&#123;x:101&#125;</span></span><br></pre></td></tr></table></div></figure>\n\n\n\n\n\n</li>\n</ul>\n","prev":{"title":"JavaScript —— 原型","link":"2019/11/11/prototype"},"next":{"title":"Hello ，the 4.0","link":"2019/09/28/hello"},"plink":"http://yoursite.com/2019/10/13/variable/"}