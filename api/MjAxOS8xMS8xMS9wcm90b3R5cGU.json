{"title":"JavaScript —— 原型","date":"2019-11-11T06:33:14.498Z","thumbnail":"https://s2.ax1x.com/2019/11/11/MQpjJg.md.jpg","link":"2019/11/11/prototype","updated":"2019-11-13T07:42:58.355Z","content":"<p>原型可谓是JavaScript的灵魂所在。所谓灵魂，不仅是因为它核心，同时也因为它比较抽象，云里雾里得摸不着头脑。</p>\n<h2 id=\"class与继承\">class与继承<a href=\"2019/11/11/prototype#class与继承\"></a></h2><p><code>class</code>的本质是<code>function</code>，是一种语法糖。    </p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(name) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.name = name</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  eat() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span> is eating`</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Student</span> <span class=\"keyword\">extends</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(name,number) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(name)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.number = number</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  sayHi() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>学号是<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.number&#125;</span>`</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Teacher</span> <span class=\"keyword\">extends</span> <span class=\"title\">Person</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(name,major) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(name)</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.major = major</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  teach() &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">`<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.name&#125;</span>教的是<span class=\"subst\">$&#123;<span class=\"keyword\">this</span>.major&#125;</span>`</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<h2 id=\"原型\">原型<a href=\"2019/11/11/prototype#原型\"></a></h2><p>若此时新建一个学生类的实例——夏洛</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> xialuo = <span class=\"keyword\">new</span> Student(<span class=\"string\">'夏洛'</span>,<span class=\"number\">100</span>)</span><br></pre></td></tr></table></div></figure>\n\n<p>则有，隐式原型：<code>xialuo.__proto__</code>；显示原型：<code>Student.prototype</code>，且两者完全相等，即<code>xialuo.__proto__ === Student.prototype</code></p>\n<p><img src=\"../images/Snipaste_2019-11-11_20-06-28.jpg\" alt class=\"article-img\"></p>\n<p>结合例子和图，原型关系主要有以下3点：</p>\n<ul>\n<li>每个class都有都有显示原型<code>prototype</code></li>\n<li>每个实例都有隐式原型<code>__proto__</code></li>\n<li>实例的<code>__proto__</code>指向对应class的<code>prototype</code></li>\n</ul>\n<h2 id=\"原型链\">原型链<a href=\"2019/11/11/prototype#原型链\"></a></h2><p>还是以开始的几个class为例子：</p>\n<p><img src=\"../images/Snipaste_2019-11-11_20-16-33.jpg\" alt class=\"article-img\"></p>\n<ul>\n<li><p>instanceOf 工作原理</p>\n<p>如：</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">xialuo instanceOf <span class=\"built_in\">Object</span>  <span class=\"comment\">//true</span></span><br></pre></td></tr></table></div></figure>\n\n<p>实例xialuo一直沿着隐式原型往上找，要是能找到其中一个隐式原型对应的显式原型为Object，则返回true，否则返回false。（用于判断一个变量是不是Array之类的） </p>\n</li>\n</ul>\n<p><img src=\"../images/Snipaste_2019-11-11_20-27-07.jpg\" alt class=\"article-img\"></p>\n<h2 id=\"手写简易JQuery\">手写简易JQuery<a href=\"2019/11/11/prototype#手写简易JQuery\"></a></h2><figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Jquery</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(selector) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> result = <span class=\"built_in\">document</span>.querySelectorAll(selector)</span><br><span class=\"line\">    <span class=\"keyword\">const</span> length = result.length</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">this</span>[i] = result[i]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.length = length</span><br><span class=\"line\">    <span class=\"keyword\">this</span>.selector = selector</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">get</span>(index) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>[index]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  each(fn) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">this</span>.length; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> elem = <span class=\"keyword\">this</span>[i]</span><br><span class=\"line\">      fn(elem)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  on(type, fn) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.each(<span class=\"function\"><span class=\"params\">elem</span> =&gt;</span> &#123;</span><br><span class=\"line\">      elem.addEventListener(type, fn, <span class=\"literal\">false</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// ... other API</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n<p>考虑插件和拓展性</p>\n<figure class=\"highlight javascript\"><div><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 插件</span></span><br><span class=\"line\">jQuery.prototype.dialog = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">info</span>) </span>&#123;</span><br><span class=\"line\">  alert(info)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 造轮子</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">myJQuery</span> <span class=\"keyword\">extends</span> <span class=\"title\">jQuery</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">constructor</span>(selector)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(selector)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">//拓展自己的方法</span></span><br><span class=\"line\">  addClass(className)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  style(data)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//...</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></div></figure>\n\n","prev":{"title":"JavaScript —— 作用域和闭包","link":"2019/11/11/scope&closure"},"next":{"title":"JavaScript —— 变量","link":"2019/10/13/variable"},"plink":"http://yoursite.com/2019/11/11/prototype/","toc":[{"title":"class与继承","id":"class与继承","index":"1"},{"title":"原型","id":"原型","index":"2"},{"title":"原型链","id":"原型链","index":"3"},{"title":"手写简易JQuery","id":"手写简易JQuery","index":"4"}]}